package lectures.week1basics

object TypesValuesVariables extends App {

  //=================================первичная информация==============================================

  // val/var - ключевое слово для объявления переменных
  //       в последствии можно присваивать переменным другие значения при var
  // val - переменная НЕ изменяемая с течением времени
  // var - переменная ИЗМЕНЯЕМАЯ с течением времени
  // aString - название переменной
  // String - тип переменной
  var aString: String = "Hello fucking world"
  println(aString)

  /* доступные типы*/
  aString = "Hello" //  присвоение нового значения переменной aString строка
  val aChar = 'C' // 16 битный символ Unicode

  val aInt = 11 // целочисленный 32 бита
  val aLong = 11L // целочисленный 64 бита
  val aFloat = 2.0f // с плавающей запятой 32 бита
  val aDouble = 2.0 // с плавающей запятой 64 бита

  val aBoolean = true // булевы величины

  //================================перечесление типов данных============================================

  // Byte[8 битовое знаковое значение.Диапазон от -128 до 127]
  // Short[16 битовое знаковое значение.Диапазон от -32768 to 32767]
  // Int[32 битовое знаковое значение.Диапазон от -2147483648 to 2147483647]
  // Long[64 битовое знаковое значение.Диапазон от -9223372036854775808 to 9223372036854775807]
  // Float[32 битовое IEEE 754 число с плавающей точкой одинарной точности]
  // Double[64 битовое IEEE 754 число с плавающей точкой двойной точности]
  // Char[16 битовое беззнаковый символ Unicode.Диапазон от U + 0000 to U + FFFF]  используются одиночные кавычки ''
  // String[Последовательность экземпляров Char] используются двойные кавычки ""
  // Boolean[Логическое буквенное значение true или false]
  // Unit[Соответствует отсутствию значения]
  // Null[Null или пустая ссылка]
  // Nothing[Подтип любого другого типа, включает в себя отсутствие значения.]
  // AnyRef[Супертип любого ссылочного типа.]

  //================================получение типа данных============================================

  // получение типа данных
  println(aFloat.getClass())

  //================================точка с запятой============================================

  // точку с запятой в коде используют когда хотят сообщить компилятору об окончании выражения
  // следующий код идентичен
  // val aChar = 'c'; val aInt = 1

  // val aChar = 'c'
  // val aInt = 1

  //================================печать============================================
  println("hop")

  //===============================условности=========================================

  // при делениии Int на Int ВСЕГДА будет Int, даже если по логике должно быть число с плавающей запятой

  val aInt1 : Int = 5
  val aInt2 : Int = 2

  println(s"Вот что получается при делении Int на Int -${aInt1 / aInt2}")
  println(s"Нужно преобразовать в число с плавающей запятой \nчто бы получить число с плавающей запятой ${aInt1.toFloat / aInt2}")

}


